<UserControl x:Class="CMiX.Studio.Views.LayerPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Views="clr-namespace:CMiX.Studio.Views"
             xmlns:ViewModels="clr-namespace:CMiX.MVVM.ViewModels;assembly=CMiX.MVVM"
             xmlns:MVVM.Views="clr-namespace:CMiX.MVVM.Views;assembly=CMiX.MVVM"
             xmlns:Resources="clr-namespace:CMiX.MVVM.Resources;assembly=CMiX.MVVM"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:ViewModel="clr-namespace:CMiX.Studio.ViewModels"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:Controls="clr-namespace:CMiX.MVVM.Controls;assembly=CMiX.MVVM"
             mc:Ignorable="d" 
             d:DesignHeight="660" d:DesignWidth="306">

    <UserControl.Resources>
        <ResourceDictionary>
            <ObjectDataProvider x:Key="BlendMode" MethodName="GetNames" ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="ViewModels:BlendMode"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <Resources:BindingProxy x:Key="ProjectProxy" Data="{Binding}" />
            <Resources:BindingProxy x:Key="CompositionProxy" Data="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type Views:Composition}}}"/>
            <Resources:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
            <Resources:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>


            <DataTemplate DataType="{x:Type ViewModel:Entity}">
                <Grid Margin="0, 1" Height="30">
                    <Grid.InputBindings>
                        <MouseBinding 
                            Gesture="LeftDoubleClick" 
                            Command="{Binding Data.SelectedLayer.EntityEditor.EditEntityCommand, Source={StaticResource ProjectProxy}}"
                            CommandParameter="{Binding}"/>
                    </Grid.InputBindings>
                    <Controls:EditableTextBox IsEditing="{Binding IsRenaming}" Text="{Binding Path=Name}" />
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                            <ei:ChangePropertyAction PropertyName="IsSelected" Value="true" TargetObject="{Binding}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>

    <Border>
        <StackPanel Margin="0, 8" DockPanel.Dock="Top">
            <Grid Margin="2" DockPanel.Dock="Top" Height="20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock HorizontalAlignment="Right" Padding="4, 0" VerticalAlignment="Center" Text="BlendMode"/>
                <ComboBox 
                    Grid.Column="1"
                    DockPanel.Dock="Top"
                    Height="20"
                    SelectedItem="{Binding BlendMode.Mode}"
                    ItemsSource="{Binding Source={StaticResource BlendMode}}"/>
            </Grid>
            <Controls:CMiXSlider
                Style="{StaticResource CMiXSliderStyle}"
                DockPanel.Dock="Top"
                Margin="2, 4"
                Value="{Binding Fade.Amount}" 
                Caption="Alpha"/>
        </StackPanel>
    </Border>
    
    <!--<Separator DockPanel.Dock="Top" Margin="0" Background="{StaticResource HighHighDarkerColor}" Height="4" HorizontalAlignment="Stretch"/>-->
        <!--<DockPanel Margin="8" DockPanel.Dock="Bottom" LastChildFill="False">
            <Button
                DockPanel.Dock="Left"
                ToolTip="New Layer"
                Command="{Binding AddLayerCommand}"
                Width="20"
                Height="20"
                Style="{StaticResource ButtonImage}">
                <Button.Content>
                    <Image Margin="15" Source="{StaticResource Add}"/>
                </Button.Content>
            </Button>
            <Button
                DockPanel.Dock="Left"
                ToolTip="Duplicate Layer"
                Command="{Binding DuplicateSelectedLayerCommand}"
                Margin="2, 0, 0, 0"
                Width="20" 
                Height="20"
                Style="{StaticResource ButtonImage}">
                <Button.Content>
                    <Image Margin="15" Source="{StaticResource Copy}" />
                </Button.Content>
            </Button>
            <Button
                DockPanel.Dock="left"
                ToolTip="Delete Layer"
                Command="{Binding DeleteSelectedLayerCommand}"
                Margin="2, 0, 0, 0"
                Width="20" 
                Height="20"
                Style="{StaticResource ButtonImage}">
                <Button.Content>
                    <Image Margin="15" Source="{StaticResource DeleteLayer}"/>
                </Button.Content>
            </Button>
        </DockPanel>
        <Separator  DockPanel.Dock="Bottom" Margin="0" Background="{StaticResource HighHighDarkerColor}" Height="4" HorizontalAlignment="Stretch"/>-->
        <!--<ListBox 
            Margin="0, 8"
            HorizontalContentAlignment="Stretch" 
            ScrollViewer.HorizontalScrollBarVisibility="Auto"
            Style="{StaticResource LayerListBox}"
            ItemContainerStyle="{StaticResource LayerListBoxItemStyle}"
            ItemsSource="{Binding Layers}" 
            SelectedItem="{Binding SelectedLayer}"
            dd:DragDrop.IsDragSource="True"
            dd:DragDrop.IsDropTarget="True"
            dd:DragDrop.DropHandler="{Binding}">
            <ListBox.ContextMenu>
                <ContextMenu>
                    <MenuItem
                        Padding="8, 4"
                        Foreground="{StaticResource TextBase}"
                        Command="{Binding Data.AddLayerCommand, Source={StaticResource ProjectProxy}}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image Width="10" Height="10" Source="{StaticResource NewLayer}" />
                                <Separator Margin="8, 0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                                <TextBlock Text="New Layer"/>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        Visibility="{Binding Data.SelectedLayer, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter={x:Static Visibility.Collapsed}, FallbackValue=Collapsed, Source={StaticResource ProjectProxy}}"
                        Padding="8, 4"
                        Foreground="{StaticResource TextBase}"
                        Command="{Binding Data.DuplicateSelectedLayerCommand, Source={StaticResource ProjectProxy}}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image Width="10" Height="10" Source="{StaticResource Copy}" />
                                <Separator Margin="8, 0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                                <TextBlock Text="Duplicate Layer"/>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        Visibility="{Binding Data.SelectedLayer, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter={x:Static Visibility.Collapsed}, FallbackValue=Collapsed, Source={StaticResource ProjectProxy}}"
                        Padding="8, 4"
                        Foreground="{StaticResource TextBase}"
                        Command="{Binding Data.DuplicateSelectedLayerLinkCommand, Source={StaticResource ProjectProxy}}"
                        CommandParameter="{Binding}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image Width="10" Height="10" Source="{StaticResource Copy}" />
                                <Separator Margin="8, 0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                                <TextBlock Text="Duplicate Layer Link"/>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        Visibility="{Binding Data.SelectedLayer, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter={x:Static Visibility.Collapsed}, FallbackValue=Collapsed, Source={StaticResource ProjectProxy}}"
                        Padding="8, 4"
                        Foreground="{StaticResource TextBase}"
                        Command="{Binding Data.ComponentEditor.RenameCommand, Source={StaticResource CompositionProxy}}"
                        CommandParameter="{Binding Data.SelectedLayer, Source={StaticResource ProjectProxy}}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image Width="10" Height="10" Source="{StaticResource Rename}" />
                                <Separator Margin="8, 0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                                <TextBlock Text="Rename"/>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        Visibility="{Binding Data.SelectedLayer, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter={x:Static Visibility.Collapsed}, FallbackValue=Collapsed, Source={StaticResource ProjectProxy}}"
                        Padding="8, 4"
                        Foreground="{StaticResource TextBase}"
                        Command="{Binding Data.DeleteSelectedLayerCommand, Source={StaticResource ProjectProxy}}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image Width="10" Height="10" Source="{StaticResource DeleteLayer}" />
                                <Separator Margin="8, 0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                                <TextBlock Text="Delete Layer"/>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        Visibility="{Binding Data.SelectedLayer, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter={x:Static Visibility.Collapsed}, FallbackValue=Collapsed, Source={StaticResource ProjectProxy}}"
                        Padding="8, 4"
                        Foreground="{StaticResource TextBase}"
                        Command="{Binding Data.ResetLayerCommand, Source={StaticResource ProjectProxy}}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image Width="10" Height="10" Source="{StaticResource Reset}" />
                                <Separator Margin="8, 0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                                <TextBlock Text="Reset Layer"/>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                </ContextMenu>
            </ListBox.ContextMenu>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border 
                        SnapsToDevicePixels="true">
                        <Border.InputBindings>
                            <MouseBinding
                                Gesture="LeftDoubleClick" 
                                Command="{Binding DataContext.ComponentEditor.AddEditableCommand, RelativeSource={RelativeSource AncestorType={x:Type Views:Composition}}}"
                                CommandParameter="{Binding}"/>
                        </Border.InputBindings>
                        <DockPanel Height="30" DockPanel.Dock="Top">
                            <ToggleButton 
                                DockPanel.Dock="Left"
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                IsChecked="{Binding IsVisible}"
                                Style="{StaticResource ToggleVisibility}"
                                Margin="0"
                                Padding="4"/>
                            <Border DockPanel.Dock="Right" Padding="8">
                                <Image  Opacity="0.75" Visibility="{Binding IsMask, Converter={StaticResource BoolToVisibilityConverter}}" Source="{StaticResource Mask}"/>
                            </Border>
                            <Controls:EditableTextBox 
                                HorizontalAlignment="Stretch"
                                Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                IsEditing="{Binding IsRenaming, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </DockPanel>
                    </Border>
                    --><!--<Views:ChannelLayer/>--><!--
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>-->
</UserControl>


