<UserControl x:Class="CMiX.Views.CompositionList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Views="clr-namespace:CMiX.Views"
             xmlns:Resources="clr-namespace:CMiX.MVVM.Resources;assembly=CMiX.MVVM"
             xmlns:Controls="clr-namespace:CMiX.MVVM.Controls;assembly=CMiX.MVVM"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="525" d:DesignWidth="293">

    <UserControl.Resources>
        <ResourceDictionary>
            <Resources:BindingProxy x:Key="proxy" Data="{Binding}"/>
            <Resources:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Border Background="{StaticResource HighDarkerColor}">
        <DockPanel>
            <Border 
                DockPanel.Dock="Top">
                <DockPanel Height="40">
                    <TextBlock
                        Padding="8"
                        VerticalAlignment="Center"
                        Text="COMPOSITIONS"
                        Foreground="{StaticResource TextBase}"/>
                </DockPanel>
            </Border>
            <ListBox 
                AllowDrop="True"
                dd:DragDrop.IsDragSource="True"
                dd:DragDrop.IsDropTarget="True"
                dd:DragDrop.DragHandler="{Binding}"
                dd:DragDrop.DropHandler="{Binding}"
                SelectedItem="{Binding CompositionEditor.SelectedComposition}"
                ItemsSource="{Binding CompositionEditor.Compositions}">
                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem
                            Padding="8, 4"
                            Foreground="{StaticResource TextBase}"
                            Command="{Binding Data.CompositionEditor.NewCompositionCommand, Source={StaticResource proxy}}">
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{StaticResource NewLayer}" Height="10" Width="10"/>
                                    <Separator Margin="8, 0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                                    <TextBlock Text="Add new composition"/>
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>
                        <MenuItem
                            Visibility="{Binding Data.CompositionEditor.SelectedComposition, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter={x:Static Visibility.Collapsed}, FallbackValue=Collapsed, Source={StaticResource proxy}}"
                            Padding="8, 4"
                            Foreground="{StaticResource TextBase}"
                            Command="{Binding Data.CompositionEditor.RenameSelectedCompositionCommand, Source={StaticResource proxy}}">
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Image Width="10" Height="10" Source="{StaticResource Rename}" />
                                    <Separator Margin="8, 0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                                    <TextBlock Text="Rename"/>
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>
                        <MenuItem
                            Visibility="{Binding Data.CompositionEditor.SelectedComposition, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter={x:Static Visibility.Collapsed}, FallbackValue=Collapsed, Source={StaticResource proxy}}"
                            Padding="8, 4"
                            Foreground="{StaticResource TextBase}"
                            Command="{Binding Data.CompositionEditor.DeleteSelectedCompositionCommand, Source={StaticResource proxy}}">
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Image Width="10" Height="10" Source="{StaticResource DeleteLayer}" />
                                    <Separator Margin="8, 0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                                    <TextBlock Text="Delete"/>
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>
                        <MenuItem
                            Visibility="{Binding Data.CompositionEditor.SelectedComposition, Converter={StaticResource NullToVisibilityConverter}, ConverterParameter={x:Static Visibility.Collapsed}, FallbackValue=Collapsed, Source={StaticResource proxy}}"
                            Padding="8, 4"
                            Foreground="{StaticResource TextBase}"
                            Command="{Binding Data.CompositionEditor.DuplicateSelectedCompositionCommand, Source={StaticResource proxy}}">
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Image Width="10" Height="10" Source="{StaticResource Copy}" />
                                    <Separator Margin="8, 0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                                    <TextBlock Text="Duplicate"/>
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>
                    </ContextMenu>
                </ListBox.ContextMenu>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border 
                            IsHitTestVisible="True"
                            Padding="2"
                            VerticalAlignment="Center"
                            Height="25"
                            Background="Transparent"
                            HorizontalAlignment="Stretch">
                            <Controls:EditableTextBox 
                                HorizontalAlignment="Stretch"
                                Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                IsEditing="{Binding IsEditingName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </DockPanel>
    </Border>
</UserControl>
