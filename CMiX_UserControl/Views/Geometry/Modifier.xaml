<UserControl
    x:Class="CMiX.Views.Modifier"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:CMiX.MVVM.Controls;assembly=CMiX_MVVM"
    xmlns:MVVM.Views="clr-namespace:CMiX.MVVM.Views;assembly=CMiX_MVVM"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:Resources="clr-namespace:CMiX.MVVM.Resources;assembly=CMiX_MVVM"
    xmlns:ViewModels="clr-namespace:CMiX.ViewModels"
    xmlns:MVVM.ViewModels="clr-namespace:CMiX.MVVM.ViewModels;assembly=CMiX_MVVM"
    xmlns:Views = "clr-namespace:CMiX.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="538.667"
    d:DesignWidth="289.667"
    mc:Ignorable="d">


    <UserControl.Resources>
        <ResourceDictionary>
            <Resources:BindingProxy x:Key="proxy" Data="{Binding}" />
            <ObjectDataProvider x:Key="FileMask" MethodName="GetNames" ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="MVVM.ViewModels:GeometryFileMask"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <Resources:BoolInverterConverter x:Key="BoolInverter" />
            <Resources:EnumToStringConverter x:Key="EnumToString" />
        </ResourceDictionary>
    </UserControl.Resources>
    
    
    <Expander Header="Modifier" Style="{StaticResource ExpanderBase}">
        <Border Padding="8">
            <StackPanel>
                <Border
                    
                    DockPanel.Dock="Bottom"
                    Style="{StaticResource BorderContainer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="0.5*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock 
                            Text="Count" 
                            Foreground="{StaticResource TextBase}" 
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Left"/>
                        <MVVM.Views:Counter
                            Grid.Column="1"
                            Height="20"
                            HorizontalAlignment="Stretch"
                            DataContext="{Binding Counter}"/>
                    </Grid>
                </Border>
                <Separator Background="{StaticResource LightColor}" Opacity="0.25" Margin="0, 4"/>
                <Border Height="25">
                    <TextBlock
                        VerticalAlignment="Center"
                        Margin="4, 0, 0, 0"
                        Text="Translate"
                        Foreground="{StaticResource TextBase}"/>
                </Border>
                <Grid Height="20" Margin="0,1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Pattern" Padding="4, 0" HorizontalAlignment="Right" Foreground="{StaticResource TextBase}"/>
                    <ToggleButton
                        Grid.Column="2"
                        x:Name="GeometryTranslate"
                        Content="{Binding TranslateMode.Mode, Converter={StaticResource EnumToString}}"/>
                    <!--
                Keyboard.KeyDown="Toggle_KeyDown"
                
                    IsHitTestVisible="{Binding ElementName=GeometryTranslatePopup, Path=IsOpen, Converter={StaticResource BoolInverter}}"/>-->
                    <Popup
                    x:Name="GeometryTranslatePopup"
                    Width="432"
                    AllowsTransparency="True"
                    IsOpen="{Binding IsChecked, ElementName=GeometryTranslate}"
                    Placement="Center"
                    StaysOpen="False" Grid.ColumnSpan="3" Margin="0,0,-73.333,0">
                        <!--Keyboard.KeyDown="Popup_KeyDown"-->
                        <ViewModels:TranslateSelector DataContext="{Binding TranslateMode}"/>
                    </Popup>
                </Grid>
                <MVVM.Views:Slider
                    Grid.Column="0"
                    Caption="Amount"
                    DataContext="{Binding Translate}"/>
                <Views:BeatModifier 
                    Margin="0, 0, 0, 8"
                    DataContext="{Binding TranslateBeatModifier}"/>
                <Separator Background="{StaticResource LightColor}" Opacity="0.25" Margin="0, 4"/>
                <Border Height="25">
                    <TextBlock
                    VerticalAlignment="Center"
                    Margin="4, 0, 0, 0"
                    Text="Scale"
                    Foreground="{StaticResource TextBase}"/>
                </Border>
                <Grid Height="20" Margin="0,1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Pattern" Padding="4, 0" HorizontalAlignment="Right" Foreground="{StaticResource TextBase}"/>
                    <ToggleButton
                        Grid.Column="2"
                        x:Name="GeometryScale"
                        Content="{Binding ScaleMode.Mode, Converter={StaticResource EnumToString}}"/>
                    <!--
                Keyboard.KeyDown="Toggle_KeyDown"
                
                    IsHitTestVisible="{Binding ElementName=GeometryScalePopup, Path=IsOpen, Converter={StaticResource BoolInverter}}"/>-->
                    <Popup
                    x:Name="GeometryScalePopup"
                    Width="432"
                    AllowsTransparency="True"
                    IsOpen="{Binding IsChecked, ElementName=GeometryScale}"
                    Placement="Center"
                    StaysOpen="False" Grid.ColumnSpan="3" Margin="0,0,-73.333,0">
                        <!--Keyboard.KeyDown="Popup_KeyDown"-->
                        <ViewModels:ScaleSelector DataContext="{Binding ScaleMode}"/>
                    </Popup>
                </Grid>
                <MVVM.Views:Slider
                    Grid.Column="0"
                    Caption="Scale"
                    DataContext="{Binding Scale}" Grid.ColumnSpan="2"/>

                <Views:BeatModifier 
                    Margin="0, 0, 0, 4"
                    DataContext="{Binding ScaleBeatModifier}"/>
                <Separator Background="{StaticResource DarkColor}" Opacity="0.25" Margin="0, 8"/>
                
                <TextBlock
                    VerticalAlignment="Center"
                    Margin="4, 0, 0, 0"
                    Text="Rotation"
                    Foreground="{StaticResource TextBase}"/>
                <Grid Margin="0, 1" Height="20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Pattern" Padding="4, 0" HorizontalAlignment="Right" Foreground="{StaticResource TextBase}"/>
                    <ToggleButton
                    Grid.Column="1"
                    x:Name="GeometryRotation"
                    Content="{Binding RotationMode.Mode, Converter={StaticResource EnumToString}}"/>
                    <!--
                Keyboard.KeyDown="Toggle_KeyDown"
                
                    IsHitTestVisible="{Binding ElementName=GeometryRotationPopup, Path=IsOpen, Converter={StaticResource BoolInverter}}"/>-->
                    <Popup 
                        x:Name="GeometryRotationPopup"
                        Width="432"
                        AllowsTransparency="True"
                        IsOpen="{Binding IsChecked, ElementName=GeometryRotation}"
                        Placement="Center"
                        StaysOpen="False">
                        <!--Keyboard.KeyDown="Popup_KeyDown"-->
                        <ViewModels:RotationSelector DataContext="{Binding RotationMode}"/>
                    </Popup>

                </Grid>
                <MVVM.Views:Slider
                    Grid.Column="0"
                    Caption="Rotate"
                    DataContext="{Binding Rotation}"/>
                <Views:BeatModifier 
                    Margin="0, 0, 0, 4"
                    DataContext="{Binding ScaleBeatModifier}"/>
            </StackPanel>
        </Border>

    </Expander>
</UserControl>