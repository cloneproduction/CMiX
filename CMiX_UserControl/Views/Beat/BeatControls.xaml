<UserControl
    x:Class="CMiX.Studio.Views.BeatControls"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ViewModels="clr-namespace:CMiX.MVVM.ViewModels;assembly=CMiX.MVVM"
    xmlns:Resources="clr-namespace:CMiX.MVVM.Resources;assembly=CMiX.MVVM"
    d:DataContext="{d:DesignInstance Type={x:Type ViewModels:BeatModifier}, IsDesignTimeCreatable=False}"
    d:DesignHeight="46.5"
    d:DesignWidth="226.667"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <Resources:BindingProxy x:Key="ProjectProxy" Data="{Binding}" />
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Border>
        <Border.ContextMenu>
            <ContextMenu>
                <MenuItem
                        Padding="8, 4"
                        Foreground="{StaticResource TextBase}"
                        Command="{Binding Data.ResetCommand, Source={StaticResource ProjectProxy}}">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Width="10" Height="10" Source="{StaticResource Reset}" />
                            <Separator Margin="8, 0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                            <TextBlock Text="Reset BPM"/>
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
            </ContextMenu>
        </Border.ContextMenu>


        <Border x:Name="CounterBorder" Background="Transparent">
            <Grid  Height="20" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Border
                    HorizontalAlignment="Right"
                    Width="60"
                    Padding="4, 0">
                    <TextBlock 
                        TextTrimming="CharacterEllipsis" 
                        Text="BPM"
                        FontSize="10" 
                        HorizontalAlignment="Right" 
                        VerticalAlignment="Center" 
                        Foreground="{StaticResource TextBase}"/>
                </Border>
                <Border x:Name="borderMask" 
                        Grid.Column="1" 
                        Background="{DynamicResource DarkColor}" 
                        CornerRadius="{DynamicResource CornerRadiusDefault}"/>

                <Border Grid.Column="1" Style="{StaticResource BorderShadow}">
                    <Border HorizontalAlignment="Stretch" 
                        CornerRadius="{DynamicResource CornerRadiusDefault}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="{DynamicResource DarkColor}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource Color}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Border.OpacityMask>
                            <VisualBrush Visual="{Binding ElementName=borderMask}"/>
                        </Border.OpacityMask>
                        <Grid Grid.Column="1">
                            <TextBlock 
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center"
                                Foreground="{StaticResource TextBase}" 
                                Text="{Binding BPM, Mode=OneWay, StringFormat=F0}" />
                            <Button
                                HorizontalAlignment="Left"
                                DockPanel.Dock="Left"
                                Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                                Command="{Binding Path=DivideCommand}"
                                Content="-"
                                IsDefault="True">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource ButtonRoundedLeft}" TargetType="{x:Type Button}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=CounterBorder}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button
                            HorizontalAlignment="Right"
                            Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                            Command="{Binding Path=MultiplyCommand}"
                            Content="+"
                            DockPanel.Dock="Right"
                            IsDefault="True">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource ButtonRoundedBottomRight}" TargetType="{x:Type Button}">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=CounterBorder}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </Border>
                </Border>
                
            </Grid>
        </Border>
    </Border>
</UserControl>