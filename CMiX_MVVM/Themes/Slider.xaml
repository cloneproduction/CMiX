<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Views="clr-namespace:CMiX.Views"
                    xmlns:Controls="clr-namespace:CMiX.MVVM.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="RepeatButtonDecrease" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border CornerRadius="4, 0, 0, 4" Background="{StaticResource Color}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonDecreaseOver" TargetType="{x:Type RepeatButton}"
        BasedOn="{StaticResource RepeatButtonDecrease}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border CornerRadius="4, 0, 0, 4" Background="{StaticResource LightColor}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonIncrease" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{StaticResource DarkColor}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonIncreaseOver" TargetType="{x:Type RepeatButton}"
           BasedOn="{StaticResource RepeatButtonIncrease}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{StaticResource Color}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle
                        x:Name="grip"
                        Width="2"
                        VerticalAlignment="Stretch"
                        Fill="{StaticResource HighLightColor}"
                        SnapsToDevicePixels="True"
                        Stretch="Fill"
                        UseLayoutRounding="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbOver" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle
                        x:Name="grip"
                        Width="2"
                        VerticalAlignment="Stretch"
                        Fill="{StaticResource SuperHighLightColor}"
                        SnapsToDevicePixels="True"
                        Stretch="Fill"
                        UseLayoutRounding="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="Slider" TargetType="{x:Type Slider}">
        <Border
            x:Name="border"
            Background="Transparent"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Track x:Name="PART_Track" Grid.Row="1">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
                        x:Name="RBD"
                        Command="{x:Static Slider.DecreaseLarge}"
                        Style="{StaticResource RepeatButtonDecrease}" 
                        />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
                        x:Name="RBI"
                        Command="{x:Static Slider.IncreaseLarge}"
                        Style="{StaticResource RepeatButtonIncrease}" 
                        />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                        x:Name="Thumb"
                        Height="Auto"
                        VerticalAlignment="Stretch"
                        Focusable="False"
                        OverridesDefaultStyle="True"
                        Style="{StaticResource SliderThumb}" 
                        />
                </Track.Thumb>
            </Track>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="RBD" Property="Style" Value="{DynamicResource RepeatButtonDecreaseOver}" />
                <Setter TargetName="RBI" Property="Style" Value="{DynamicResource RepeatButtonIncreaseOver}" />
                <Setter TargetName="Thumb" Property="Style" Value="{DynamicResource SliderThumbOver}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{StaticResource Slider}" />
    </Style>
    
    
    <!-- SLIDER CENTERED -->
    <ControlTemplate x:Key="SliderCenteredTemplate" TargetType="{x:Type Slider}">
        <Border
            x:Name="border"
            Background="{StaticResource DarkColor}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Track x:Name="PART_Track" Grid.Row="1">
                <Track.Thumb>
                    <Thumb
                        x:Name="Thumb"
                        Height="Auto"
                        VerticalAlignment="Stretch"
                        Focusable="False"
                        OverridesDefaultStyle="True"
                        Style="{DynamicResource SliderThumb}" 
                        />
                </Track.Thumb>
            </Track>
        </Border>
    </ControlTemplate>

    <Style x:Key="SliderCentered" TargetType="{x:Type Slider}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{StaticResource SliderCenteredTemplate}" />
    </Style>


    <Style TargetType="{x:Type Controls:DistanceSlider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:DistanceSlider}">
                    <Border CornerRadius="4" x:Name="mainBorder" >
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="{StaticResource DarkColor}"/>
                                <Setter Property="Controls:MouseDownHelper.IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource Color}"/>
                                        <Setter Property="Cursor" Value="SizeWE"/>
                                    </Trigger>
                                    <Trigger Property="Controls:MouseDownHelper.IsMouseLeftButtonDown" Value="True">
                                        <Setter Property="Cursor" Value="None"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <DockPanel>
                            <Grid x:Name="Pouet" Background="Transparent">
                                <Controls:EditableValue x:Name="editableValue" 
                                                        IsEditing="{Binding Path=IsEditing, RelativeSource={RelativeSource TemplatedParent}}" 
                                                        Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Button x:Name="SubButton" 
                                    Command="{Binding SubCommand}"
                                    DockPanel.Dock="Left" 
                                    Content="-" 
                                    HorizontalAlignment="Left"
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource ButtonRoundedLeft}">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Cursor" Value="Arrow"/>
                                                </Trigger>
                                                <DataTrigger Binding="{Binding IsEditing, Mode=TwoWay, ElementName=editableValue}" Value="True">
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsEditing, Mode=TwoWay, ElementName=editableValue}" Value="False"/>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsEditing, Mode=TwoWay,ElementName=editableValue}" Value="False"/>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="False"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Button x:Name="AddButton" 
                                        Command="{Binding AddCommand}"
                                        HorizontalAlignment="Right"
                                        DockPanel.Dock="Right" 
                                        Content="+" 
                                        Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource ButtonRoundedRight}">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Cursor" Value="Arrow"/>
                                                </Trigger>
                                                <DataTrigger Binding="{Binding IsEditing, Mode=TwoWay, ElementName=editableValue}" Value="True">
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsEditing, Mode=TwoWay, ElementName=editableValue}" Value="False"/>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsEditing, Mode=TwoWay, ElementName=editableValue}" Value="False"/>
                                                        <Condition Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="False"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DistanceSliderBottom" TargetType="{x:Type Controls:DistanceSlider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:DistanceSlider}">
                    <Border CornerRadius="0, 0, 4, 4" x:Name="mainBorder" >
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="{StaticResource DarkColor}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource Color}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <DockPanel>
                            <Button x:Name="SubButton" 
                                    DockPanel.Dock="Left" 
                                    Content="-" 
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource ButtonRoundedBottomLeft}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEditing, ElementName=editableValue}" Value="True">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEditing, ElementName=editableValue}" Value="False"/>
                                                    <Condition Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEditing, ElementName=editableValue}" Value="False"/>
                                                    <Condition Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button x:Name="AddButton" 
                                    DockPanel.Dock="Right" 
                                    Content="+" 
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource ButtonRoundedBottomRight}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEditing, ElementName=editableValue}" Value="True">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEditing, ElementName=editableValue}" Value="False"/>
                                                    <Condition Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEditing, ElementName=editableValue}" Value="False"/>
                                                    <Condition Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>

                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Grid x:Name="Pouet" Background="Transparent">
                                <Controls:EditableValue x:Name="editableValue"/>
                            </Grid>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DistanceSliderTop" TargetType="{x:Type Controls:DistanceSlider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:DistanceSlider}">
                    <Border CornerRadius="4, 4, 0, 0" x:Name="mainBorder" >
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="{StaticResource DarkColor}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource Color}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <DockPanel>
                            <Button x:Name="SubButton" 
                                    DockPanel.Dock="Left" 
                                    Content="-" 
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource ButtonRoundedTopLeft}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEditing, ElementName=editableValue}" Value="True">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEditing, ElementName=editableValue}" Value="False"/>
                                                    <Condition Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEditing, ElementName=editableValue}" Value="False"/>
                                                    <Condition Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>

                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button x:Name="AddButton" 
                                    DockPanel.Dock="Right" 
                                    Content="+" 
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource ButtonRoundedTopRight}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEditing, ElementName=editableValue}" Value="True">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEditing, ElementName=editableValue}" Value="False"/>
                                                    <Condition Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEditing, ElementName=editableValue}" Value="False"/>
                                                    <Condition Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>

                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Grid x:Name="Pouet" Background="Transparent">
                                <Controls:EditableValue x:Name="editableValue"/>
                            </Grid>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DistanceSliderMiddle" TargetType="{x:Type Controls:DistanceSlider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:DistanceSlider}">
                    <Border CornerRadius="0, 0, 0, 0" x:Name="mainBorder" >
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Background" Value="{StaticResource DarkColor}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource Color}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <DockPanel>
                            <Button x:Name="SubButton" 
                                    DockPanel.Dock="Left" 
                                    Content="-" 
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource ButtonSquare}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEditing, ElementName=editableValue}" Value="True">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEditing, ElementName=editableValue}" Value="False"/>
                                                    <Condition Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEditing, ElementName=editableValue}" Value="False"/>
                                                    <Condition Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>

                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button x:Name="AddButton" 
                                    DockPanel.Dock="Right" 
                                    Content="+" 
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource ButtonSquare}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEditing, ElementName=editableValue}" Value="True">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEditing, ElementName=editableValue}" Value="False"/>
                                                    <Condition Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEditing, ElementName=editableValue}" Value="False"/>
                                                    <Condition Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>

                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Grid x:Name="Pouet" Background="Transparent">
                                <Controls:EditableValue x:Name="editableValue"/>
                            </Grid>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>