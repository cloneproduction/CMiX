<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Views="clr-namespace:CMiX.Views"
                    xmlns:Controls="clr-namespace:CMiX.MVVM.Controls"
                    xmlns:Resources="clr-namespace:CMiX.MVVM.Resources">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
        <ResourceDictionary>
            <Resources:DoubleToStringConverter x:Key="DoubleToString" />

            <Trigger x:Key="Trigger0" Property="FrameworkElement.IsMouseOver" Value="True">
                <Setter Property="FrameworkElement.Cursor" Value="Arrow"/>
            </Trigger>
            <DataTrigger x:Key="Trigger1" Binding="{Binding IsEditing, ElementName=editableValue}" Value="True">
                <Setter Property="FrameworkElement.Visibility" Value="Hidden" />
            </DataTrigger>
            <MultiDataTrigger x:Key="Trigger2">
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsEditing, ElementName=editableValue}" Value="False"/>
                    <Condition Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="FrameworkElement.Visibility" Value="Visible" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger x:Key="Trigger3">
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsEditing, ElementName=editableValue}" Value="False"/>
                    <Condition Binding="{Binding IsMouseOver, ElementName=mainBorder}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="FrameworkElement.Visibility" Value="Hidden" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

        </ResourceDictionary>

    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="RepeatButtonDecrease" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border CornerRadius="4, 0, 0, 4" Background="{StaticResource LightColor}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonDecreaseOver" TargetType="{x:Type RepeatButton}"
        BasedOn="{StaticResource RepeatButtonDecrease}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border 
                        CornerRadius="4, 0, 0, 4" 
                        Background="{StaticResource HighLightColor}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonIncrease" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border CornerRadius="0, 4, 4, 0" Background="{StaticResource DarkColor}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonIncreaseOver" TargetType="{x:Type RepeatButton}"
           BasedOn="{StaticResource RepeatButtonIncrease}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border CornerRadius="0, 4, 4, 0" Background="{StaticResource Color}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle
                        x:Name="grip"
                        Width="2"
                        VerticalAlignment="Stretch"
                        Fill="{StaticResource LightColor}"
                        SnapsToDevicePixels="True"
                        Stretch="Fill"
                        UseLayoutRounding="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbOver" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle
                        x:Name="grip"
                        Width="2"
                        VerticalAlignment="Stretch"
                        Fill="{StaticResource HighLightColor}"
                        SnapsToDevicePixels="True"
                        Stretch="Fill"
                        UseLayoutRounding="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="Slider" TargetType="{x:Type Slider}">
        <Border
            x:Name="border"
            Background="Transparent"
            SnapsToDevicePixels="True">
            <Grid>
                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                        x:Name="RBD"
                        Command="{x:Static Slider.DecreaseLarge}"
                        Style="{StaticResource RepeatButtonDecrease}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                        x:Name="RBI"
                        Command="{x:Static Slider.IncreaseLarge}"
                        Style="{StaticResource RepeatButtonIncrease}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                        x:Name="Thumb"
                        Height="Auto"
                        VerticalAlignment="Stretch"
                        Focusable="False"
                        OverridesDefaultStyle="True"
                        Style="{StaticResource SliderThumb}" />
                    </Track.Thumb>
                </Track>
                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Text="{Binding Name}" Padding="8, 0" IsHitTestVisible="False"/>
   
            </Grid>

        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="RBD" Property="Style" Value="{DynamicResource RepeatButtonDecreaseOver}" />
                <Setter TargetName="RBI" Property="Style" Value="{DynamicResource RepeatButtonIncreaseOver}" />
                <Setter TargetName="Thumb" Property="Style" Value="{DynamicResource SliderThumbOver}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style TargetType="{x:Type Slider}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{StaticResource Slider}" />
    </Style>

    <!-- SLIDER CENTERED -->
    <ControlTemplate x:Key="SliderCenteredTemplate" TargetType="{x:Type Slider}">
        <Border
            x:Name="border"
            Background="{StaticResource DarkColor}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Track x:Name="PART_Track" Grid.Row="1">
                <Track.Thumb>
                    <Thumb
                        x:Name="Thumb"
                        Height="Auto"
                        VerticalAlignment="Stretch"
                        Focusable="False"
                        OverridesDefaultStyle="True"
                        Style="{DynamicResource SliderThumb}" />
                </Track.Thumb>
            </Track>
        </Border>
    </ControlTemplate>

    <Style x:Key="SliderCentered" TargetType="{x:Type Slider}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{StaticResource SliderCenteredTemplate}" />
    </Style>
    
    
    
    <Style x:Key="CMiXSliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Controls:MouseDownHelper.IsEnabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border
                        x:Name="mainBorder"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Border x:Name="sliderBorder" Background="Transparent">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger  Binding="{Binding Path=IsEditing, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Track>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton
                                        x:Name="RBD"
                                        Command="{x:Static Slider.DecreaseLarge}"
                                        Style="{StaticResource RepeatButtonDecrease}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton
                                        x:Name="RBI"
                                        Command="{x:Static Slider.IncreaseLarge}"
                                        Style="{StaticResource RepeatButtonIncrease}" />
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Border>
                            
                            <TextBlock 
                                x:Name="sliderName"
                                VerticalAlignment="Center" 
                                HorizontalAlignment="Left"
                                Text="{Binding Path=Caption, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}" 
                                Padding="8, 0" 
                                IsHitTestVisible="False"/>
                            <TextBlock x:Name="textDisplay" 
                                       Padding="0, 0, 8, 0"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Right"
                                       Text="{Binding Path=Value, Mode=TwoWay, Converter={StaticResource DoubleToString}, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <TextBox x:Name="textInput" 
                                     Focusable="True"
                                     Padding="2, 0, 0, 0"
                                     VerticalAlignment="Center"
                                     CaretBrush="{StaticResource TextBase}"
                                     SelectionBrush="{StaticResource TextBase}"
                                     Background="{StaticResource HighHighDarkerColor}"
                                     Foreground="{StaticResource TextBase}"
                                     Text="{Binding Path=Value, Mode=TwoWay, Converter={StaticResource DoubleToString}, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                        <Setter Property="BorderBrush" Value="Red"/>
                                        <Style.Triggers>
                                            <DataTrigger  Binding="{Binding Path=IsEditing, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <DataTrigger  Binding="{Binding Path=IsEditing, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                            <Setter TargetName="sliderName" Property="Visibility" Value="Visible"/>
                        </DataTrigger>

                        <DataTrigger  Binding="{Binding Path=IsEditing, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                            <Setter TargetName="sliderName" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RBD" Property="Style" Value="{DynamicResource RepeatButtonDecreaseOver}" />
                            <Setter TargetName="RBI" Property="Style" Value="{DynamicResource RepeatButtonIncreaseOver}" />
                        </Trigger>
                        
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="mainBorder" Property="Opacity" Value="0.5" />
                        </Trigger>
                        
                        <Trigger Property="Controls:MouseDownHelper.IsMouseLeftButtonDown" Value="True">
                            <Setter Property="Cursor" Value="None"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <Style x:Key="distanceSliderBorder" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource DarkColor}"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Controls:MouseDownHelper.IsEnabled" Value="True"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Color}"/>
                <Setter Property="Cursor" Value="SizeWE"/>
            </Trigger>
            <Trigger Property="Controls:MouseDownHelper.IsMouseLeftButtonDown" Value="True">
                <Setter Property="Cursor" Value="None"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AddButton" TargetType="Button" BasedOn="{StaticResource ButtonRoundedRight}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Style.Triggers>
            <StaticResource ResourceKey="Trigger0" />
            <StaticResource ResourceKey="Trigger1" />
            <StaticResource ResourceKey="Trigger2" />
            <StaticResource ResourceKey="Trigger3" />
        </Style.Triggers>
    </Style>

    <Style x:Key="SubButton" TargetType="Button" BasedOn="{StaticResource ButtonRoundedLeft}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Style.Triggers>
            <StaticResource ResourceKey="Trigger0" />
            <StaticResource ResourceKey="Trigger1" />
            <StaticResource ResourceKey="Trigger2" />
            <StaticResource ResourceKey="Trigger3" />
        </Style.Triggers>
    </Style>

    
    <Style TargetType="{x:Type Controls:DistanceSlider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:DistanceSlider}">
                    <Border x:Name="mainBorder" 
                            Style="{DynamicResource distanceSliderBorder}">
                        <Grid x:Name="Pouet" 
                              Background="Transparent">
                            <Controls:EditableValue x:Name="editableValue" 
                                                    IsEditing="{Binding Path=IsEditing, RelativeSource={RelativeSource TemplatedParent}}" 
                                                    Text="{Binding Path=Value, Mode=TwoWay, Converter={StaticResource DoubleToString}, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Button x:Name="SubButton" 
                                    Content="-" 
                                    HorizontalAlignment="Left"
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}}"
                                    Style="{DynamicResource SubButton}">
                            </Button>
                            <Button x:Name="AddButton" 
                                    Content="+" 
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}}"
                                    Style="{DynamicResource AddButton}">
                            </Button>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="AddButtonBottom" TargetType="Button" BasedOn="{StaticResource ButtonRoundedBottomRight}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Style.Triggers>
            <StaticResource ResourceKey="Trigger0" />
            <StaticResource ResourceKey="Trigger1" />
            <StaticResource ResourceKey="Trigger2" />
            <StaticResource ResourceKey="Trigger3" />
        </Style.Triggers>
    </Style>

    <Style x:Key="SubButtonBottom" TargetType="Button" BasedOn="{StaticResource ButtonRoundedBottomLeft}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Style.Triggers>
            <StaticResource ResourceKey="Trigger0" />
            <StaticResource ResourceKey="Trigger1" />
            <StaticResource ResourceKey="Trigger2" />
            <StaticResource ResourceKey="Trigger3" />
        </Style.Triggers>
    </Style>

    <Style x:Key="DistanceSliderBottom" TargetType="{x:Type Controls:DistanceSlider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:DistanceSlider}">
                    <Border x:Name="mainBorder"  
                            CornerRadius="0, 0, 4, 4" 
                            Style="{DynamicResource distanceSliderBorder}">
                        <Grid x:Name="Pouet" 
                              Background="Transparent">
                            <Controls:EditableValue x:Name="editableValue" 
                                                    IsEditing="{Binding Path=IsEditing, RelativeSource={RelativeSource TemplatedParent}}" 
                                                    Text="{Binding Path=Value, Mode=TwoWay, Converter={StaticResource DoubleToString}, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Button x:Name="SubButton" 
                                    Content="-" 
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}"
                                    Style="{StaticResource SubButtonBottom}">
                            </Button>
                            <Button x:Name="AddButton" 
                                    Content="+" 
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}"
                                    Style="{StaticResource AddButtonBottom}">
                            </Button>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SubButtonTop" TargetType="Button" BasedOn="{StaticResource ButtonRoundedTopLeft}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Style.Triggers>
            <StaticResource ResourceKey="Trigger0" />
            <StaticResource ResourceKey="Trigger1" />
            <StaticResource ResourceKey="Trigger2" />
            <StaticResource ResourceKey="Trigger3" />
        </Style.Triggers>
    </Style>

    <Style x:Key="AddButtonTop" TargetType="Button" BasedOn="{StaticResource ButtonRoundedTopRight}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Style.Triggers>
            <StaticResource ResourceKey="Trigger0" />
            <StaticResource ResourceKey="Trigger1" />
            <StaticResource ResourceKey="Trigger2" />
            <StaticResource ResourceKey="Trigger3" />
        </Style.Triggers>
    </Style>
    
    <Style x:Key="DistanceSliderTop" TargetType="{x:Type Controls:DistanceSlider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:DistanceSlider}">
                    <Border x:Name="mainBorder"
                            CornerRadius="4, 4, 0, 0"  
                            Style="{StaticResource distanceSliderBorder}">
                        <Grid x:Name="Pouet" Background="Transparent">
                            <Controls:EditableValue x:Name="editableValue" 
                                                    IsEditing="{Binding Path=IsEditing, RelativeSource={RelativeSource TemplatedParent}}" 
                                                    Text="{Binding Path=Value, Mode=TwoWay, Converter={StaticResource DoubleToString}, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Button x:Name="SubButton" 
                                    Content="-" 
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}"
                                    Style="{StaticResource SubButtonTop}">
                            </Button>
                            <Button x:Name="AddButton" 
                                    Content="+" 
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}"
                                    Style="{StaticResource AddButtonTop}">
                            </Button>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SubButtonMiddle" TargetType="Button" BasedOn="{StaticResource ButtonSquare}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Style.Triggers>
            <StaticResource ResourceKey="Trigger0" />
            <StaticResource ResourceKey="Trigger1" />
            <StaticResource ResourceKey="Trigger2" />
            <StaticResource ResourceKey="Trigger3" />
        </Style.Triggers>
    </Style>

    <Style x:Key="AddButtonMiddle" TargetType="Button" BasedOn="{StaticResource ButtonSquare}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Style.Triggers>
            <StaticResource ResourceKey="Trigger0" />
            <StaticResource ResourceKey="Trigger1" />
            <StaticResource ResourceKey="Trigger2" />
            <StaticResource ResourceKey="Trigger3" />
        </Style.Triggers>
    </Style>
    
    <Style x:Key="DistanceSliderMiddle" TargetType="{x:Type Controls:DistanceSlider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:DistanceSlider}">
                    <Border x:Name="mainBorder" 
                            Style="{StaticResource distanceSliderBorder}"
                            CornerRadius="0, 0, 0, 0"  >
                        <Grid x:Name="Pouet" Background="Transparent">
                            <Controls:EditableValue x:Name="editableValue" 
                                                IsEditing="{Binding Path=IsEditing, RelativeSource={RelativeSource TemplatedParent}}" 
                                                Text="{Binding Path=Value, Mode=TwoWay, Converter={StaticResource DoubleToString}, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Button x:Name="SubButton" 
                                    Content="-" 
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}"
                                    Style="{StaticResource SubButtonMiddle}">
                            </Button>
                            <Button x:Name="AddButton" 
                                    Content="+" 
                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}"
                                    Style="{StaticResource AddButtonMiddle}">
                            </Button>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>